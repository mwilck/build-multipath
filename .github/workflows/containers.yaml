---
name: build multi-arch containers
on:
  push:
    branches:
      - master

jobs:
  build-multi:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        os:
          - alpine
          - arch
          - debian-sid
          - debian-bullseye
          - debian-buster
          - fedora-36
          - fedora-rawhide
          - centos-8
          - centos-7
          - opensuse-tumbleweed
          - opensuse-leap
          - opensuse-leap-15.3
          - sles-15
          - sles-12
          - ubuntu-trusty

    steps:

      - name: set arch list (full)
        if: |
          matrix.os == 'alpine' || matrix.os == 'debian-sid' ||
          matrix.os == 'debian-bullseye' || matrix.os == 'opensuse-tumbleweed'
        run: >-
          echo PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,
          linux/arm/v7,linux/386 >> $GITHUB_ENV
      - name: set arch list (64bit)
        if: |
          startswith(matrix.os, 'fedora') ||
          startswith(matrix.os, 'opensuse-leap') 
        run: >-
          echo PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          >> $GITHUB_ENV
      - name: set arch list (centos)
        if: ${{ startswith(matrix.os, 'centos') }}
        run: echo PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le >> $GITHUB_ENV
      - name: set arch list (debian old)
        if: ${{ matrix.os == 'debian-buster' || matrix.os == 'debian-jessie' }}
        run: echo PLATFORMS=linux/amd64,linux/arm/v7,linux/386 >> $GITHUB_ENV
      - name: set arch list (arch linux)
        # SLES: need different secret for every arch, ours works only for x86_64
        if: ${{ matrix.os == 'arch' || startswith(matrix.os, 'sles') }}
        run: echo PLATFORMS=linux/amd64 >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest

      - name: Create Dockerfile
        id: m4
        run: |
          mkdir ./container
          m4 -I m4 -D DISTRO=${{ matrix.os }} \
             header.m4 dockerfile.m4 >./container/Dockerfile
          cat ./container/Dockerfile

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-${{ matrix.os }}
          key: containers-${{ matrix.os }}

      - name: Build and push container
        if: ${{ ! startswith(matrix.os, 'sles') }}
        uses: docker/build-push-action@v3
        with:
          context: ./container
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ghcr.io/mwilck/multipath-build-${{ matrix.os }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.os }}
          cache-to: type=local,dest=/tmp/.new-buildx-cache-${{ matrix.os }}

      - name: Build and push container (SLES)
        if: ${{ startswith(matrix.os, 'sles') }}
        uses: docker/build-push-action@v3
        with:
          context: ./container
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ghcr.io/mwilck/multipath-build-${{ matrix.os }}:latest
          secrets: |
            "SUSEConnect=${{ secrets.SUSECONNECT }}"
            "SCCcredentials=${{ secrets.SCCCREDENTIALS }}"
          cache-from: type=local,src=/tmp/.buildx-cache-${{ matrix.os }}
          cache-to: type=local,dest=/tmp/.new-buildx-cache-${{ matrix.os }}

      - name: Move cache
        # Avoid cache growing too large
        # https://github.com/docker/build-push-action/issues/252
        run: |
          rm -rf /tmp/.buildx-cache-${{ matrix.os }}
          mv /tmp/.new-buildx-cache-${{ matrix.os }} \
             /tmp/.buildx-cache-${{ matrix.os }}
